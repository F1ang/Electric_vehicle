<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\lks07x_Project.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\lks07x_Project.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sat Nov 01 22:37:39 2025
<BR><P>
<H3>Maximum Stack Usage =        264 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Hardware_init &rArr; MCPWM_ch012_init &rArr; MCPWM_StructInit
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[19]">CAN0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">CAN0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[14]">ADC0_IRQHandler</a> from interrupt.o(i.ADC0_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[15]">ADC1_IRQHandler</a> from interrupt.o(i.ADC1_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[19]">CAN0_IRQHandler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[1e]">CL0_IRQHandler</a> from interrupt.o(i.CL0_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[13]">CMP_IRQHandler</a> from interrupt.o(i.CMP_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[18]">DMA0_IRQHandler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[12]">DSP0_IRQHandler</a> from interrupt.o(i.DSP0_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[e]">GPIO_IRQHandler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[f]">HALL0_IRQHandler</a> from interrupt.o(i.HALL0_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from interrupt.o(i.HardFault_Handler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[c]">I2C0_IRQHandler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[16]">MCPWM0_IRQHandler</a> from interrupt.o(i.MCPWM0_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[17]">MCPWM1_IRQHandler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[1d]">PWRDN_IRQHandler</a> from interrupt.o(i.PWRDN_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[a]">QEP0_IRQHandler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[b]">QEP1_IRQHandler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[1a]">SIF0_IRQHandler</a> from interrupt.o(i.SIF0_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[d]">SPI0_IRQHandler</a> from interrupt.o(i.SPI0_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_lks32mc07x.o(.text) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[1c]">SW_IRQHandler</a> from interrupt.o(i.SW_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from interrupt.o(i.SysTick_Handler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from hardware_init.o(i.SystemInit) referenced from startup_lks32mc07x.o(.text)
 <LI><a href="#[6]">TIMER0_IRQHandler</a> from interrupt.o(i.TIMER0_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[7]">TIMER1_IRQHandler</a> from interrupt.o(i.TIMER1_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[8]">TIMER2_IRQHandler</a> from interrupt.o(i.TIMER2_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[9]">TIMER3_IRQHandler</a> from interrupt.o(i.TIMER3_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[10]">UART0_IRQHandler</a> from interrupt.o(i.UART0_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[11]">UART1_IRQHandler</a> from interrupt.o(i.UART1_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[1b]">WAKE_IRQHandler</a> from interrupt.o(i.WAKE_IRQHandler) referenced from startup_lks32mc07x.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lks32mc07x.o(.text)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[22]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2b]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[63]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[64]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[65]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[24]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[66]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[67]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>GPIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>MCPWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>QEP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>QEP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lks32mc07x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[69]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_init
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6b]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_StructInit
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_StructInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_StructInit
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[6d]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>Read_Trim</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lks32mc08x_nvr.o(.text.Read_Trim))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Read_Trim
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempSensor_Init
</UL>

<P><STRONG><a name="[14]"></a>ADC0_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, interrupt.o(i.ADC0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>ADC0_init</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, hardware_init.o(i.ADC0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ADC0_init &rArr; ADC_3Shunt_NormalModeCFG &rArr; ADC_CHN_GAIN_CFG
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearIRQFlag
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_3Shunt_NormalModeCFG
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[15]"></a>ADC1_IRQHandler</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, interrupt.o(i.ADC1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>ADC1_init</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, hardware_init.o(i.ADC1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = ADC1_init &rArr; ADC_3Shunt_NormalModeCFG &rArr; ADC_CHN_GAIN_CFG
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearIRQFlag
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_3Shunt_NormalModeCFG
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[30]"></a>ADC_3Shunt_NormalModeCFG</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, hardware_init.o(i.ADC_3Shunt_NormalModeCFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ADC_3Shunt_NormalModeCFG &rArr; ADC_CHN_GAIN_CFG
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CHN_GAIN_CFG
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_init
</UL>

<P><STRONG><a name="[32]"></a>ADC_CHN_GAIN_CFG</STRONG> (Thumb, 58 bytes, Stack size 36 bytes, lks32mc07x_adc.o(i.ADC_CHN_GAIN_CFG))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ADC_CHN_GAIN_CFG
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_3Shunt_NormalModeCFG
</UL>

<P><STRONG><a name="[2f]"></a>ADC_ClearIRQFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lks32mc07x_adc.o(i.ADC_ClearIRQFlag))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_init
</UL>

<P><STRONG><a name="[2e]"></a>ADC_Init</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, lks32mc07x_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_Init &rArr; Read_Trim
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_AnalogModuleClockCmd
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Trim
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_init
</UL>

<P><STRONG><a name="[2d]"></a>ADC_StructInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lks32mc07x_adc.o(i.ADC_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_init
</UL>

<P><STRONG><a name="[1e]"></a>CL0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.CL0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>CMP_Cmd</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lks32mc07x_cmp.o(i.CMP_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CMP_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_AnalogModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_init
</UL>

<P><STRONG><a name="[13]"></a>CMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.CMP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CMP_Init</STRONG> (Thumb, 380 bytes, Stack size 0 bytes, lks32mc07x_cmp.o(i.CMP_Init))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_init
</UL>

<P><STRONG><a name="[36]"></a>CMP_StructInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lks32mc07x_cmp.o(i.CMP_StructInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CMP_StructInit
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_init
</UL>

<P><STRONG><a name="[38]"></a>CMP_init</STRONG> (Thumb, 114 bytes, Stack size 96 bytes, hardware_init.o(i.CMP_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CMP_init &rArr; CMP_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_StructInit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[3b]"></a>Clock_Init</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, hardware_init.o(i.Clock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Clock_Init &rArr; SoftDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[3d]"></a>DAC_Cmd</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lks32mc07x_dac.o(i.DAC_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DAC_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_AnalogModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_init
</UL>

<P><STRONG><a name="[3e]"></a>DAC_Init</STRONG> (Thumb, 316 bytes, Stack size 16 bytes, lks32mc07x_dac.o(i.DAC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DAC_Init &rArr; Read_Trim
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Trim
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_init
</UL>

<P><STRONG><a name="[41]"></a>DAC_OutputValue</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lks32mc07x_dac.o(i.DAC_OutputValue))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_init
</UL>

<P><STRONG><a name="[3f]"></a>DAC_StructInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lks32mc07x_dac.o(i.DAC_StructInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DAC_StructInit
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_init
</UL>

<P><STRONG><a name="[40]"></a>DAC_init</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, hardware_init.o(i.DAC_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DAC_init &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_StructInit
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_OutputValue
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Cmd
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[12]"></a>DSP0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.DSP0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DSP_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lks32mc07x_dsp.o(i.DSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DSP_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[43]"></a>GPIO_Init</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, lks32mc07x_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
</UL>

<P><STRONG><a name="[44]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 258 bytes, Stack size 12 bytes, lks32mc07x_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
</UL>

<P><STRONG><a name="[47]"></a>GPIO_StructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lks32mc07x_gpio.o(i.GPIO_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
</UL>

<P><STRONG><a name="[46]"></a>GPIO_init</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, hardware_init.o(i.GPIO_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPIO_init &rArr; GPIO_PinAFConfig &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[f]"></a>HALL0_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, interrupt.o(i.HALL0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HALL0_IRQHandler &rArr; HALL_IRQProcess &rArr; ReadHallState
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_IRQProcess
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>HALL_Cmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lks32mc07x_hall.o(i.HALL_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HALL_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_init
</UL>

<P><STRONG><a name="[48]"></a>HALL_IRQProcess</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, mc_hall.o(i.HALL_IRQProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HALL_IRQProcess &rArr; ReadHallState
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadHallState
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL0_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>HALL_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lks32mc07x_hall.o(i.HALL_Init))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_init
</UL>

<P><STRONG><a name="[4c]"></a>HALL_StructInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lks32mc07x_hall.o(i.HALL_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_init
</UL>

<P><STRONG><a name="[4b]"></a>HALL_init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, hardware_init.o(i.HALL_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HALL_init &rArr; HALL_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_StructInit
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>Hardware_init</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, hardware_init.o(i.Hardware_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = Hardware_init &rArr; MCPWM_ch012_init &rArr; MCPWM_StructInit
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSP_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempSensor_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_DISABLE
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTimer_init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftDelay
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PGA_init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_ch012_init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_init
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4f]"></a>IWDG_DISABLE</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lks32mc07x_sys.o(i.IWDG_DISABLE))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[16]"></a>MCPWM0_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, interrupt.o(i.MCPWM0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>MCPWM_Init</STRONG> (Thumb, 1484 bytes, Stack size 8 bytes, lks32mc07x_mcpwm.o(i.MCPWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MCPWM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_ch012_init
</UL>

<P><STRONG><a name="[58]"></a>MCPWM_StructInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lks32mc07x_mcpwm.o(i.MCPWM_StructInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MCPWM_StructInit
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_ch012_init
</UL>

<P><STRONG><a name="[51]"></a>MCPWM_ch012_init</STRONG> (Thumb, 252 bytes, Stack size 248 bytes, hardware_init.o(i.MCPWM_ch012_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = MCPWM_ch012_init &rArr; MCPWM_StructInit
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_StructInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[5a]"></a>OPA_Init</STRONG> (Thumb, 176 bytes, Stack size 12 bytes, lks32mc07x_opa.o(i.OPA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OPA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PGA_init
</UL>

<P><STRONG><a name="[59]"></a>OPA_StructInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lks32mc07x_opa.o(i.OPA_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PGA_init
</UL>

<P><STRONG><a name="[53]"></a>PGA_init</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, hardware_init.o(i.PGA_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = PGA_init &rArr; OPA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_StructInit
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OPA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[1d]"></a>PWRDN_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.PWRDN_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>ReadHallState</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, mc_hall.o(i.ReadHallState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReadHallState
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_IRQProcess
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_HallState
</UL>

<P><STRONG><a name="[1a]"></a>SIF0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.SIF0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>SPI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.SPI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SW_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.SW_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SYS_AnalogModuleClockCmd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lks32mc07x_sys.o(i.SYS_AnalogModuleClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Cmd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_Cmd
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TempSensor_Init
</UL>

<P><STRONG><a name="[39]"></a>SYS_ModuleClockCmd</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, lks32mc07x_sys.o(i.SYS_ModuleClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HALL_Cmd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSP_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimerInit
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCPWM_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMP_init
</UL>

<P><STRONG><a name="[3c]"></a>SoftDelay</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, hardware_init.o(i.SoftDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SoftDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, hardware_init.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; Clock_Init &rArr; SoftDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(.text)
</UL>
<P><STRONG><a name="[6]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, interrupt.o(i.TIMER0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.TIMER1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.TIMER2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.TIMER3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TIM_TimerCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lks32mc07x_tim.o(i.TIM_TimerCmd))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTimer_init
</UL>

<P><STRONG><a name="[5b]"></a>TIM_TimerInit</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, lks32mc07x_tim.o(i.TIM_TimerInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_TimerInit
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTimer_init
</UL>

<P><STRONG><a name="[60]"></a>TIM_TimerStrutInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, lks32mc07x_tim.o(i.TIM_TimerStrutInit))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTimer_init
</UL>

<P><STRONG><a name="[5c]"></a>Task_Scheduler</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, task_scheduler.o(i.Task_Scheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Task_Scheduler &rArr; Update_HallState &rArr; ReadHallState
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Update_HallState
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>TempSensor_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, lks32mc07x_tmp.o(i.TempSensor_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TempSensor_Init &rArr; Read_Trim
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_AnalogModuleClockCmd
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Trim
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[10]"></a>UART0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.UART0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART1_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, interrupt.o(i.UART1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>UART_Init</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, lks32mc07x_uart.o(i.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_ModuleClockCmd
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_init
</UL>

<P><STRONG><a name="[5f]"></a>UART_StructInit</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, lks32mc07x_uart.o(i.UART_StructInit))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_init
</UL>

<P><STRONG><a name="[50]"></a>UART_init</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, hardware_init.o(i.UART_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = UART_init &rArr; UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[52]"></a>UTimer_init</STRONG> (Thumb, 60 bytes, Stack size 144 bytes, hardware_init.o(i.UTimer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = UTimer_init &rArr; TIM_TimerInit
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimerStrutInit
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimerInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimerCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[5d]"></a>Update_HallState</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, mc_hall.o(i.Update_HallState))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Update_HallState &rArr; ReadHallState
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadHallState
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Scheduler
</UL>

<P><STRONG><a name="[1b]"></a>WAKE_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, interrupt.o(i.WAKE_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_lks32mc07x.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lks32mc07x_gpio.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>

<P><STRONG><a name="[6e]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[6f]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[70]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = main &rArr; Hardware_init &rArr; MCPWM_ch012_init &rArr; MCPWM_StructInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Task_Scheduler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[56]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hardware_init.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>

<P><STRONG><a name="[55]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, hardware_init.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hardware_init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
